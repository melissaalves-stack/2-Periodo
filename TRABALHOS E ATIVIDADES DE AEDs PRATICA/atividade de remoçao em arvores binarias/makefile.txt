# Automatizando o makefile

# Nome do projeto
PROJ_NAME=arvore_binaria

# Arquivos .c (encontra arvore.c)
C_SOURCE=$(wildcard *.c)

# Arquivos .h (encontra arvore.h)
H_SOURCE=$(wildcard *.h)

# Arquivos objeto (transforma arvore.c em arvore.o)
OBJ=$(C_SOURCE:.c=.o)

# Compilador
CC=gcc

# Flags (opções) para o compilador
CC_FLAGS=-c         \
         -Wall      \
		 -g         \
         -pedantic

#########################
# Compilação e linkagem #
#########################
# Regra principal
all: $(PROJ_NAME)

# Regra para linkar e criar o executável final
$(PROJ_NAME): $(OBJ)
	$(CC) -o $@ $^

# Regra genérica para compilar .c para .o
# Agora, qualquer arquivo .o depende do seu .c e dos cabeçalhos (.h)
%.o: %.c $(H_SOURCE)
	$(CC) $(CC_FLAGS) -o $@ $<

# Regra para limpar os arquivos gerados
clean:
	rm -rf *.o $(PROJ_NAME) *~
	