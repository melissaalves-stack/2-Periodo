# Makefile para o projeto de reconhecimento de palíndromos
# Por Melissa Alves, Julia Rocha e Mell Dias

# Configurações do compilador
CC = gcc                            # Compilador C
CFLAGS = -Wall -Wextra -std=c99 -g  # Adicione -g para depuração
TARGET = palindrome_checker         # Nome do executável
SOURCE = palindrome_checker.c       # Arquivo fonte principal

# Regra padrão
all: $(TARGET)                      # Compila o programa

# Compilação do programa principal
$(TARGET): $(SOURCE)                        # Regra para compilar o programa
	$(CC) $(CFLAGS) -o $(TARGET) $(SOURCE)  # Comando de compilação

# Regra para limpar arquivos compilados
clean:
	rm -f $(TARGET)                         # Remove o executável

# Regra para executar o programa com arquivo de teste
run: $(TARGET)
	@echo "Criando arquivo de teste..."   # Mensagem informativa
	@echo "Ana" > teste.txt               # Cria arquivo de teste
	@echo "Maria" >> teste.txt            # Adiciona mais linhas ao arquivo
	@echo "12/3/21" >> teste.txt          # Adiciona mais linhas ao arquivo
	@echo "01010" >> teste.txt            # Adiciona mais linhas ao arquivo
	@echo "OtTo" >> teste.txt             # Adiciona mais linhas ao
	@echo "Onibus" >> teste.txt           # Adiciona mais linhas ao
	@echo "Executando programa..."        # Mensagem informativa
	./$(TARGET) teste.txt                 # Executa o programa com o arquivo de teste

# Regra para executar com arquivo personalizado
test: $(TARGET)                                                  # Regra para testar com arquivo específico
	@if [ -z "$(FILE)" ]; then \                                 # Verifica se a variável FILE está vazia
		echo "Uso: make test FILE=nome_do_arquivo.txt"; \        # Mensagem de uso
	else \                                                       # Se FILE não estiver vazia
		./$(TARGET) $(FILE); \                                   # Executa o programa com o arquivo especificado
	Fim                                                          # Fim da condicional

# Regra de ajuda
help:
	@echo "Comandos disponíveis:"                                          # Mensagem de ajuda
	@echo "  make          - Compila o programa"                           # Note o uso de make
	@echo "  make clean    - Remove arquivos compilados"                   # Note o uso de clean
	@echo "  make run      - Compila e executa com arquivo de teste"       # Note o uso de run
	@echo "  make test FILE=arquivo.txt - Executa com arquivo específico"  # Note o uso de FILE
	@echo "  make help     - Mostra esta ajuda"                            # Note o uso de help

# Declara regras que não criam arquivos
.PHONY: all clean run test help  # Declaração de regras "phony"